{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.5.1644",
      "templateHash": "9050230978883182331"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "mcp",
      "allowedValues": [
        "mcpdemo",
        "mcptest",
        "mcp"
      ],
      "minLength": 3,
      "maxLength": 12,
      "metadata": {
        "description": "Resource name prefix (lowercase letters/numbers, 3-12 chars). Used to derive resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources."
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[toLower(format('{0}-func', parameters('prefix')))]",
      "metadata": {
        "description": "Function App name (must be globally unique for DNS). Default combines prefix + func."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "maxLength": 24,
      "metadata": {
        "description": "Override storage account name (3-24 lowercase). Leave empty to auto-generate from prefix + uniqueString."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('{0}-law', parameters('prefix'))]",
      "metadata": {
        "description": "Log Analytics workspace name."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-appi', parameters('prefix'))]",
      "metadata": {
        "description": "Application Insights component name."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "environment": "dev",
        "workload": "mcp"
      },
      "metadata": {
        "description": "Optional tags to apply to all resources."
      }
    }
  },
  "variables": {
    "storageSku": "Standard_LRS",
    "roleBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "roleQueueDataContributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
    "generatedStorageBase": "[toLower(format('{0}st{1}', replace(parameters('prefix'), '-', ''), uniqueString(resourceGroup().id, parameters('prefix'))))]",
    "generatedStorage": "[if(greater(length(variables('generatedStorageBase')), 24), substring(variables('generatedStorageBase'), 0, 24), variables('generatedStorageBase'))]",
    "effectiveStorageAccountName": "[if(empty(parameters('storageAccountName')), variables('generatedStorage'), toLower(parameters('storageAccountName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2022-06-15",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "IngestionMode": "ApplicationInsights"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-04-01",
      "name": "[variables('effectiveStorageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[variables('storageSku')]"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            },
            "queue": {
              "enabled": true
            },
            "table": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[format('{0}-plan', parameters('prefix'))]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "FC1",
        "tier": "FlexConsumption"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('prefix')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~5"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2022-06-15').ConnectionString]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2022-06-15').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage__accountName",
              "value": "[variables('effectiveStorageAccountName')]"
            },
            {
              "name": "AzureWebJobsStorage__credential",
              "value": "managedidentity"
            }
          ],
          "linuxFxVersion": "",
          "ftpsState": "Disabled",
          "alwaysOn": false,
          "minimumElasticInstanceCount": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('prefix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('effectiveStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('effectiveStorageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', variables('effectiveStorageAccountName')), variables('roleBlobDataContributor'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleBlobDataContributor'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-12-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('effectiveStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('effectiveStorageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', variables('effectiveStorageAccountName')), variables('roleQueueDataContributor'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleQueueDataContributor'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-12-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('effectiveStorageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Deployed Function App name"
      },
      "value": "[parameters('functionAppName')]"
    },
    "functionAppHostname": {
      "type": "string",
      "metadata": {
        "description": "Function App default hostname"
      },
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-12-01').defaultHostName]"
    },
    "functionAppPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Managed identity principalId"
      },
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-12-01', 'full').identity.principalId]"
    },
    "storageName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name"
      },
      "value": "[variables('effectiveStorageAccountName')]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "metadata": {
        "description": "Application Insights Connection String"
      },
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2022-06-15').ConnectionString]"
    }
  }
}